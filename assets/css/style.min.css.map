{"version":3,"sources":["style.min.css","base/_helpers.scss","base/_typography.scss","base/_variables.scss","../../node_modules/include-media/dist/_include-media.scss","header/_header.scss","base/_mixins.scss","footer/_footer.scss","navigation/_navigation.scss","search/_search.scss","section/page-top/_page-top.scss","section/portfolio/_portfolio.scss","general/common/_common.scss","general/icon/_icon.scss","general/button/_button.scss","general/title/_title.scss"],"names":[],"mappings":"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","file":"style.min.css","sourcesContent":["/* Vendors*/\n@import './node_modules/include-media/dist/_include-media.scss';\n\n/* Base modules*/\n@import 'base/main';\n\n@import 'header/header';\n\n@import 'footer/footer';\n\n@import 'navigation/navigation';\n\n@import 'search/search';\n\n@import 'section/main';\n\n@import 'general/main';\n","// list reset\n%listreset {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n// clearfix\n%clearfix {\n &:after {\n    content: '';\n    display: block;\n    clear: both;\n  }\n}\n\n.clearfix {\n  @extend %clearfix;\n}\n\n.ellipsis {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}","// Typography\n\n.h1,\n.h2,\n.h3,\n.h4,\n.h5,\n.h6,\n.h {\n\tfont-family: map-deep-get($headings, 'fonts', 'headings-font-family');\n\tfont-weight: bold;\n\tmargin: 0 0 0.5em;\n\tcolor: map-deep-get($headings, 'fonts', 'headings-color');\n\tletter-spacing: 1px;\n}\n\n.h1 {\n\tfont-size: map-deep-get($headings, 'sizes', 'h1-font-size');\n}\n\n.h2 {\n\tfont-size: map-deep-get($headings, 'sizes', 'h2-font-size');\n}\n\n.h3 {\n\tfont-size: map-deep-get($headings, 'sizes', 'h3-font-size');\n\t@include media('>desktop') {\n\t\tfont-size: 22px;\n\t\tline-height: 24px;\n\t}\n}\n\n.h4 {\n\tfont-size: map-deep-get($headings, 'sizes', 'h4-font-size');\n}\n\n.h5 {\n\tfont-size: map-deep-get($headings, 'sizes', 'h5-font-size');\n}\n\n.h6 {\n\tfont-size: map-deep-get($headings, 'sizes', 'h6-font-size');\n}","//Color \n$blue: #413d4b;\n\n\n// Headers\n$headings: (\n  'sizes': (\n    'h1-font-size': 20px,\n    'h2-font-size': 18px,\n    'h3-font-size': 16px,\n    'h4-font-size': 14px,\n    'h5-font-size': 12px,\n    'h6-font-size': 10px\n  ),\n  'fonts': (\n    'headings-font-family': unquote(\"'Lato', sans-serif\"),\n    'headings-color': inherit\n  )\n);\n\n// Body\n$base: (\n  'base-font-sans-serif': unquote(\"Lato, 'Helvetica Neue', Helvetica, sans-serif\"),\n  'base-font-serif': unquote(\"'Times New Roman', Times, Baskerville, Georgia, serif\"),\n  'secondary-font-serif': unquote(\"'Playfair Display', Times, Baskerville, Georgia, serif\"),\n  'btn-font-sans-serif': unquote(\"'Hammersmith One', 'Helvetica Neue', Helvetica, sans-serif\"),\n  'base-text-color': #fff,\n  'base-background-color': #fff,\n  'base-link-color':#39f,\n  'base-font-size': 12px,\n  'base-line-height': 1.2,\n  'base-font-family': unquote(\"Arial, 'Helvetica Neue', Helvetica, sans-serif\"),\n  'vertical-rhythm': '(map-get($base, base-line-height) * 1em)',\n  'base-min-width': 320px\n);\n\n// Forms\n$forms: (\n  'form-element-padding': unquote(\"0.4em 0.7em\"),\n  'form-element-border-color': #e5e5e5,\n  'form-element-focus-border-color': #e5e5e5,\n  'placeholder-color': #413d4b\n);\n\n\n//Button {\n$button: (\n  'btn-color': #34383d,\n  'btn-color-border': #bdc3c7,\n  'btn-color-border-hover': #4e4ca0,\n  'btn-font-size':10px,\n  'btn-line-height': 10px,\n  'btn-width': 100px,\n  'btn-radius': 4px\n);\n\n//Navigation\n$nav: (\n  'color-nav': #34383d,\n  'color-active': #41bedd\n);\n\n// Breakpoints for include media\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n  'widescreen': 1200px\n);\n\n// Keywords\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 2.5), (min-resolution: 240dpi)'\n);\n\n// Link color\n$link-color: (\n  'link-color': #34383d,\n);\n\n// Text color\n$text-color: (\n  'color': #34383d,\n);","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","/* header style */\n\n.header {\n\tbackground: #fff;\n\tposition:absolute;\n\tleft:0;\n\tright: 0;\n\ttop:0;\n\tz-index: 1;\n\t&:before,\n\t&:after {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\n\t}\n\n\t&:after {\n\t\tright: -3px;\n\t\theight: 3px;\n\t\tbackground-image: -webkit-gradient(linear, 0 0, 90% 0, from(#6a3ba8), to(#36ebf5));\n\t\tbackground-image: -webkit-linear-gradient(left, #6a3ba8, #36ebf5);\n\t\tbackground-image: -moz-linear-gradient(left, #6a3ba8, #36ebf5);\n\t\tbackground-image: -o-linear-gradient(left, #6a3ba8, #36ebf5);\n\t}\n\n    &__sticky{\n        position: fixed;\n        @include media('>=tablet') {\n            padding: 0 0 8px;\n        }\n        &:after {\n          top: auto;\n          bottom: 0;\n        }\n    }\n\n\t@include media('>=desktop') {\n\t\tpadding: 38px 0 32px;\n\t}\n    @include media('<=tablet') {\n        padding: 10px 0 10px;\n    }\n\t&__logo {\n\t\tbackground: linear-gradient(330deg, #49abd9 0%, #49abd9 25%, #70269f 50%, #70269f 75%, #70269f 100%);\n\t\t-webkit-background-clip: text;\n\t\t-webkit-text-fill-color: transparent;\n\t\tfont: 34px / 1em map-deep-get($headings, 'fonts', 'headings-font-family');\n\t\tfloat: left;\n\t\tmargin: 10px 0 0;\n\t\t@include media('>=desktop') {\n\t\t\twidth: 128px;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n\t&__logo_img {\n\t\twidth: 100%;\n\t}\n\t&__holder-nav {\n\t\t@include animate (top);\n\t\tposition: fixed;\n\t\tright: 0;\n\t\tleft: 0;\n\t\ttop: -100%;\n\t\theight: 100%;\n\t\tz-index: 100;\n\t\tbackground: linear-gradient(to right, rgba(10, 5, 47, 0.85), rgba(49, 29, 94, 0.85));\n\t\t@include media('>=tablet') {\n\t\t\tbackground: none;\n\t\t\tposition: relative;\n\t\t\theight: auto;\n\t\t\ttop: 0;\n\t\t\tfloat: right;\n\t\t\tmargin:18px 78px 0 0;\n\t\t}\n\t\t.open-nav & {\n\t\t\ttop: 0;\n\t\t}\n\t\t.resize-active &{\n\t\t\ttransition: none;\n\t\t}\n\t}\n\t.container {\n\t\tpadding: 0 15px;\n\t}\n}","// vertical align el inside parent with fixed height/min-height\n// usage \n// html - .parent>.child\n// scss - @include v-align;\n//     or @include v-align(250px);\n//     or @include v-align(250px, bottom, before);\n//\n@mixin v-align($va-height: 100%, $va-direction: middle, $va-pseudo: after) {\n  white-space: nowrap;\n  text-align: center;\n\n  &:#{$va-pseudo} {\n    content: '';\n    display: inline-block;\n    vertical-align: $va-direction;\n    width: 0;\n    min-height: $va-height;\n  }\n\n  > * {\n    white-space: normal;\n    display: inline-block;\n    vertical-align: $va-direction;\n    max-width: 99%;\n  }\n}\n\n// vertical align a pair of child el inside parent\n// usage \n// html - .post>.image+.text\n// scss - @include v-align-pair(image, text);\n//     or @include v-align-pair(image, text, bottom);\n//     or @include v-align-pair(image, text, middle, 200px);\n//\n@mixin v-align-pair($child-name1, $child-name2, $valign: middle, $width1: auto, $width2: auto ) {\n  display: table;\n  .#{$child-name1}{\n    display: table-cell;\n    vertical-align: $valign;\n    width: $width1; \n  }\n .#{$child-name2} {\n    display: table-cell;\n    vertical-align: $valign;\n    width: $width2;\n  }\n}\n\n\n// vertical align el\n// usage: @include vertical-align-el;\n//\n@mixin vertical-align-el {\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/// Mixin helping defining both `width` and `height` simultaneously.\n///\n/// @author Hugo Giraudel\n///\n/// @access public\n///\n/// @param {Length} $width - Element’s `width`\n/// @param {Length} $height ($width) - Element’s `height`\n///\n/// @example scss - Usage\n///   .foo {\n///     @include size(10em);\n///   }\n///\n///   .bar {\n///     @include size(100%, 10em);\n///   }\n///\n/// @example css - CSS output\n///   .foo {\n///     width: 10em;\n///     height: 10em;\n///   }\n///\n///   .bar {\n///     width: 100%;\n///     height: 10em;\n///   }\n///\n@mixin size($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n/// font-smothing\n/// @include font-smoothing(on);\n/// @include font-smoothing(off);\n@mixin font-smoothing($value:on){\n  @if $value == on{\n    -webkit-font-smoothing:antialiased;\n    -moz-osx-font-smoothing:grayscale;\n  }\n  @else{\n    -webkit-font-smoothing:subpixel-antialiased;\n    -moz-osx-font-smoothing:auto;\n  }\n}\n\n\n/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n@mixin hide-text {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n}\n\n\n/// Creates a visual triangle. \n/// Mixin takes ($size, $color, $direction)\n/// The $size argument can take one or two values—width height.\n/// The $color argument can take one or two \n/// values—foreground-color background-color.\n/// \n/// @author http://bourbon.io/docs/#triangle\n///\n/// $direction: \n/// up, down, left, right, up-right, up-left, down-right, down-left\n/// @example scss - Usage\n///   @include triangle(12px, gray, down);\n///   @include triangle(12px 6px, gray blue, up-left);\n///\n@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n\n\n/// Animate css properties\n// usage \n// scss - @include animate(color);\n//     or @include animate(color width);\n//     or @include animate(color width, 1s, linear);\n//\n$animation-speed: .3s !default;\n\n@mixin animate($properties, $duration: $animation-speed, $easing: ease-in-out) {\n  $list:();\n  @each $prop in $properties {\n    $str: #{$prop} #{$duration} #{$easing};\n    $list: append($list, $str, comma);\n  }\n  transition: $list;\n}\n\n\n/// Mixin for styling form-placeholders\n/// @example scss - Usage\n///   @include placeholder {\n///    color: #333;\n///   }\n///\n///   input[type='text'],\n///   input[type='tel'],\n///   input[type='email'] {\n///     @include placeholder {\n///      color: red;\n///     }\n///   }\n\n@mixin placeholder {\n  &::-webkit-input-placeholder {@content}\n  &::-moz-placeholder {opacity: 1; @content}\n  &:-moz-placeholder {@content}\n  &:-ms-input-placeholder {@content}\n  &.placeholder {@content}\n}\n\n/// Font-size px to rem calc\n/// @example scss - Usage\n/// selector {\n///    @include rem-font-size(16px);\n/// }\n\n@mixin rem-font-size($pxSize) {\n  font-size: $pxSize;\n  font-size: ($pxSize / 10px) + rem;\n}","/* footer style */\n\n.footer {\n\tbackground: #ecf0f1;\n\tbackground-size: cover;\n\tbackground-position: 50% 50%;\n\tposition: relative;\n\t&:before,\n\t&:after {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\n\t}\n\n\t&:after {\n\t\tright: -3px;\n\t\theight: 3px;\n\t\tbackground-image: -webkit-gradient(linear, 0 0, 90% 0, from(#6a3ba8), to(#36ebf5));\n\t\tbackground-image: -webkit-linear-gradient(left, #6a3ba8, #36ebf5);\n\t\tbackground-image: -moz-linear-gradient(left, #6a3ba8, #36ebf5);\n\t\tbackground-image: -o-linear-gradient(left, #6a3ba8, #36ebf5);\n\t}\n\t.container {\n\t\t@include media('>=desktop') {\n\t\t\tpadding: 71px 15px;\n\t\t}\n\t}\n\t&__top{\n\t\t@include media('>=tablet') {\n\t\t\tdisplay:flex;\n\t\t\tjustify-content: space-between;\n            align-items: flex-start;\n\t\t}\n\t}\n\n    .row-line{\n      @include media('>=desktop') {\n          display:flex;\n          justify-content: space-between;\n          align-items: flex-start;\n      }\n    }\n\n    .column{\n        @include media('>=desktop') {\n            width: 50%;\n            &:first-child{\n                padding-right: 16px;\n            }\n        }\n\n    }\n\n\t&__holder {\n        margin: 15px 0;\n\t\t@include media('>=tablet') {\n            width: 40%;\n            padding-left: 19px;\n            &:first-child{\n                padding: 0 30px 0 0;\n            }\n            &:last-child{\n                padding: 0;\n            }\n\t\t}\n\t\t@include media('>=desktop') {\n\t\t\tline-height: 26px;\n            margin: 0;\n            width: 50%;\n            padding: 0 31px 0 0;\n            margin: 0;\n            &:first-child{\n              width:38%;\n            }\n            &:last-child{\n              width: 25%;\n              padding: 0;\n            }\n\t\t}\n\t}\n\n\t&__holder-title{\n\t\tfont: 300 20px/24px map-get($base, 'base-font-sans-serif');\n\t\tmargin: 0 0 10px;\n\t\tletter-spacing: 0.5px;\n        color: map_get($text-color, 'color');\n\t\t@include media('>=desktop') {\n\t\t\tmargin: 0 0 20px;\n\t\t}\n\t}\n\n    &__holder-text{\n        color: map_get($text-color, 'color');\n        font: 400 16px/26px map-get($base, 'base-font-sans-serif');\n        margin: 0;\n    }\n\n    &__holder-item{\n      margin: 0 0 10px;\n    }\n\n    &__holder-list{\n        position: relative;\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n\n    &__tel,\n    &__mail,\n    &__skype{\n        font-size:15px;\n        color: #606366;\n        text-decoration: none;\n    }\n\n    .fa-map-marker,\n    .fa-phone,\n    .fa-envelope,\n    .fa-skype{\n        border: 1px solid #a255c3;\n        border-radius: 100%;\n        text-align: center;\n        line-height: 22px;\n        width: 21px;\n        height: 21px;\n        color: #a255c3;\n        text-decoration: none;\n        display: inline-block;\n        vertical-align: middle;\n        margin: 0 15px 10px 0;\n        position: relative;\n        font-size: 11px;\n        @include media('>=desktop') {\n            margin: 0 15px 0 0;\n        }\n    }\n\n    .fa-map-marker{\n        position: absolute;\n        left:0;\n        top: 3px;\n    }\n\n    &__location{\n        font-size: 16px;\n        color: #606366;\n        font-style: normal;\n        padding: 0 0 15px 35px;\n        position: relative;\n    }\n\n    .fa-phone{\n        font-size: 12px;\n        line-height: 25px;\n    }\n\n\t&__social {\n\t\t@extend %listreset;\n\t\toverflow: hidden;\n        text-align: center;\n        padding: 5px 0 0;\n        width: 109%;\n\t}\n\t&__social-item {\n\t\tmargin: 0 10px 10px 0;\n        display: inline-block;\n\t\t@include media('>=tablet') {\n            margin: 0 13px 13px 0;\n            float: left;\n\t\t}\n\t\t@include media('>=desktop') {\n\t\t\tmargin: 0 13px 13px 0;\n            float: left;\n\t\t}\n\t}\n\t&__social-link {\n\t\t@include animate (opacity);\n\t\tfont-size: 15px;\n\t\tdisplay: block;\n\t\twidth: 40px;\n\t\theight: 40px;\n\t\tborder-radius: 100px;\n\t\tborder: 1px solid #d1d5d8;\n\t\ttext-indent:-9999px;\n\t\toverflow:hidden;\n\t\tposition: relative;\n\t\tcolor: #d1d5d8;\n\t\t@include media('>=tablet') {\n\t\t\twidth: 35px;\n\t\t\theight: 35px;\n\t\t}\n\t\t&:hover {\n\t\t\tbackground: #ff1981;\n            border: 1px solid #ff1981;\n            color: #fff;\n\t\t}\n\t\ti {\n\t\t\ttext-indent: 0;\n\t\t\tposition: absolute;\n\t\t\tleft: 50%;\n\t\t\ttop: 50%;\n\t\t\ttransform: translate(-50%,-50%);\n\t\t}\n\t}\n\t&__nav {\n\t\t@extend %listreset;\n\t\tfont-family: map-get($base, 'base-font-sans-serif');\n\t\tfont-weight: 400;\n\t\tmargin: 0 0 20px;\n\t\t@include media('>=tablet') {\n\t\t\tmargin: 0;\n\t\t}\n\t}\n\t&__nav-item {\n\t\tmargin: 0 0 5px;\n\t\t@include media('>=tablet') {\n\t\t\tfloat: left;\n\t\t\tmargin: 0 10px 10px 0;\n\t\t}\n\t\t@include media('>=desktop') {\n\t\t\tmargin: 0 38px 10px 0;\n\t\t}\n\t}\n\t&__nav-link {\n\t\t@include animate (opacity);\n\t\ttext-transform: uppercase;\n\t\ttext-decoration: none;\n\t\tcolor: #fff;\n\t\t&:hover {\n\t\t\topacity: .8;\n\t\t}\n\t}\n\t&__copy {\n\t\tletter-spacing: 0.5px;\n\t\tfont-weight: 400;\n\t}\n}\n\n.footer-bottom{\n    background: #e3e7e9;\n    border-top: 1px solid #cbd0d4;\n    text-align: center;\n    .container{\n        padding: 15px 0;\n        @include media('>=tablet') {\n          padding: 20px 15px;\n        }\n        @include media('>=desktop') {\n          padding: 30px 15px;\n        }\n    }\n    &__copy{\n        color: #899096;\n        margin: 0;\n        font: 300 16px/1 map-deep-get($base, 'base-font-sans-serif');\n        @include media('<=tablet') {\n            font: 300 12px/1 map-deep-get($base, 'base-font-sans-serif');\n        }\n    }\n}\n\n.back-to-top {\n    border: 2px solid #c8ced1;\n    border-radius: 100%;\n    width: 54px;\n    height: 54px;\n    text-align: center;\n    line-height: 50px;\n    color: #c8ced1;\n    font-size: 24px;\n    position: fixed;\n    bottom: 40px;\n    right: 40px;\n    cursor: pointer;\n    z-index: 222;\n    display: none;\n    &:hover{\n        border-color:#98d4e3;\n        color: #98d4e3;\n    }\n    @include media('<=desktop') {\n        display: none !important;\n    }\n    @include media('<=tablet') {\n        display: none !important;\n    }\n    @media (max-width: 1300px) {\n        bottom: 15px;\n        right: 15px;\n        width: 30px;\n        height: 30px;\n        line-height: 26px;\n    }\n}","/* navigation style */\n\n.menu {\n\t@extend %listreset;\n\ttext-align: center;\n\tfont-weight: 300;\n\tfont-size: 18px;\n\tline-height: 15px;\n\tmargin:  -9px 0 -23px;\n\t@include media('<=desktop') {\n        margin: 0  0 -23px;\n\t}\n\n\t&__item {\n\t\t&:hover {\n\t\t\t> .menu__submenu{\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t}\n\t\t@include media('>=tablet') {\n\t\t\tdisplay: inline-block;\n\t\t\tvertical-align: middle;\n            margin: 0 0 0 17px;\n\t\t\tpadding:0 0 36px;\n\t\t}\n\t\t@include media('>=desktop') {\n\t\t\tmargin: 0px 0 0 40px;\n\t\t}\n\t}\n\n\t&__link {\n\t\t@include animate (color);\n\t\tposition: relative;\n\t\ttext-decoration: none;\n\t\tdisplay: block;\n\t\tpadding: 15px 5px;\n\t\tcolor: map-get($nav, 'color-nav');\n        @include media('<=tablet') {\n          color: #fff;\n        }\n\t\t&::after{\n\t\t\tcontent: \"\";\n\t\t\tbackground: url(../images/arrow-menu.svg) no-repeat;\n\t\t\twidth: 7px;\n\t\t\theight: 5px;\n\t\t\tposition: absolute;\n\t\t\ttop: 7px;\n\t\t\tright: -12px;\n\t\t}\n\t\t@include media('>=tablet') {\n\t\t\tpadding: 0;\n\t\t}\n\t\t&:hover,\n\t\t&.menu__link_active {\n\t\t\tcolor: map-get($nav, 'color-active');\n\t\t}\n\t}\n\n\t&__submenu{\n\t\tbackground: #fff;\n\t\tbox-shadow: #ecf0f1 0px 0px 1px;\n\t\tposition: absolute;\n\t\twidth: 227px;\n\t\tlist-style: none;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\ttext-align: left;\n\t\ttop: 52px;\n\t\tdisplay: none;\n\t\t&.third-level{\n\t\t\tright: -227px;\n\t\t\ttop:0;\n\t\t}\n        @include media('<=desktop') {\n            top: 30px;\n        }\n\t}\n\n\t&__submenu-item{\n\t\tborder-bottom: 1px solid #ecf0f1;\n\t\tposition: relative;\n\t\t&:hover {\n\t\t\t > .menu__submenu{\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t\t> .menu__submenu-link{\n\t\t\t\tcolor:#41bedd;\n\t\t\t}\n\t\t}\n\t}\n\n\t&__submenu-link{\n\t\tdisplay: block;\n\t\tpadding: 13px;\n\t\tfont: 300 16px/1 map-deep-get($headings, 'fonts', 'headings-font-family');\n\t\tcolor: #34383d;\n\t\ttext-decoration: none;\n\t\tposition: relative;\n\t\t&::after{\n\t\t\tcontent: \"\";\n\t\t\tbackground: url(../images/arrow-submenu.svg) no-repeat;\n\t\t\twidth: 6px;\n\t\t\theight: 8px;\n\t\t\tposition: absolute;\n\t\t\ttop: 18px;\n\t\t\tright: 13px;\n\t\t}\n\t\t&:hover{\n\t\t\tcolor:#41bedd;\n\t\t}\n\t}\n\n\t&__submenu-none{\n\t\t&::after{\n\t\t\tdisplay: none;\n\t\t}\n\t}\n}\n\n.btn-menu {\n\ttext-indent: -9999px;\n\toverflow: hidden;\n\tposition: absolute;\n\tright: 15px;\n\ttop: 3px;\n\twidth: 40px;\n\theight: 40px;\n\tfloat: right;\n\tz-index: 101;\n\tdisplay: block;\n\t@include media('>=tablet') {\n\t\tdisplay: none;\n\t}\n\t&__decor,\n\t&:after,\n\t&:before {\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\ttop: 21px;\n\t\tright: 0;\n\t\tleft: 0;\n\t\theight: 2px;\n\t\ttransition: all .2s linear;\n\t\tborder-radius: 4px;\n\t\tbackground: #000;\n\t\t.open-nav & {\n\t\t\ttop: 20px;\n\t\t\tright: 0;\n\t\t\tleft: 0;\n\t\t\ttransform: rotate(45deg);\n\t\t}\n\t}\n\t&:before {\n\t\ttop: 12px;\n\t}\n\t&:after {\n\t\ttop: 29px;\n\t\t.open-nav & {\n\t\t\ttransform: rotate(-45deg);\n\t\t}\n\t}\n}\n\n.open-nav {\n\toverflow: hidden;\n}","\r\n.sb-search {\r\n    position: absolute;\r\n    margin-top: -3px;\r\n    width: 0%;\r\n    min-width: 40px;\r\n    height: 40px;\r\n    right: 15px;\r\n    overflow: hidden;\r\n    transition: width 0.3s;\r\n    backface-visibility: hidden;\r\n    background: #fff;\r\n    z-index:100;\r\n    @include media('<=desktop') {\r\n        margin-top: 10px;\r\n        height: 33px;\r\n        width: 32px;\r\n        min-width: 32px;\r\n    }\r\n    @include media('<=tablet') {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.sb-search-input {\r\n    border: 1px solid #d1d5d8;\r\n    border-radius: 25px;\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    outline: none;\r\n    background: #fff;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 0;\r\n    padding: 13px;\r\n    z-index: 10;\r\n    font-family: inherit;\r\n    font-size: 20px;\r\n    color: #2c3e50;\r\n    @include media('<=desktop') {\r\n        height: 33px;\r\n    }\r\n}\r\n\r\n.sb-search-input::placeholder {\r\n    color: #efb480;\r\n}\r\n\r\n.sb-icon-search,\r\n.sb-search-submit  {\r\n    width: 38px;\r\n    height: 38px;\r\n    display: block;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n    line-height: 37px;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    @include media('<=desktop') {\r\n        width: 30px;\r\n        height: 30px;\r\n        line-height: 32px;\r\n    }\r\n}\r\n\r\n.sb-search-submit {\r\n    background: #fff; /* IE needs this */\r\n    -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\"; /* IE 8 */\r\n    filter: alpha(opacity=0); /* IE 5-7 */\r\n    opacity: 0;\r\n    color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    z-index: -1;\r\n}\r\n\r\n.sb-icon-search {\r\n    background: #fff;\r\n    color: #d1d5d8;\r\n    border: 1px solid #d1d5d8;\r\n    border-radius: 100%;\r\n    z-index: 90;\r\n    font-size: 18px;\r\n    font-family: 'FontAwesome';\r\n    speak: none;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-variant: normal;\r\n    text-transform: none;\r\n    -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n.sb-icon-search:before {\r\n    content: \"\\f002\";\r\n}\r\n\r\n/* Open state */\r\n.sb-search.sb-search-open,\r\n.no-js .sb-search {\r\n    width: 50%;\r\n}\r\n\r\n.sb-search.sb-search-open .sb-icon-search,\r\n.no-js .sb-search .sb-icon-search {\r\n    background: #d1d5d8;\r\n    color: #fff;\r\n    z-index: 11;\r\n}\r\n\r\n.sb-search.sb-search-open .sb-search-submit,\r\n.no-js .sb-search .sb-search-submit {\r\n    z-index: 90;\r\n}\r\n","/* Top block style */\n.page-top{\n\tbackground: rgba(122,46,179,1);\n\tbackground: linear-gradient(to right, rgba(122,46,179,1) 0%, rgba(122,46,179,1) 23%, rgba(53,236,246,1) 100%);\n\tpadding: 0;\n    margin: 54px 0 0;\n\ttext-align: center;\n\t@include media('>=desktop') {\n\t\tpadding: 43px 0 33px;\n\t\tmargin:\t90px 0 0;\n\t}\n\t&__title{\n\t\tfont: 300 60px / 1 map-deep-get($headings, 'fonts', 'headings-font-family');\n\t\tmargin: 0 0 17px;\n        @include media('<=desktop') {\n            font: 300 30px / 1 map-deep-get($headings, 'fonts', 'headings-font-family');\n        }\n\t}\n\t&__breadcrumbs-link{\n\t\tbackground: url(../images/arrow-breadcrumbs.svg) no-repeat 100% 50%;\n\t\tdisplay: inline-block;\n\t\tpadding: 0 13px;\n\t\tcolor: #fff;\n\t\tfont: 400 16px / 1 map-deep-get($base, 'base-font-sans-serif');\n\t\ttext-decoration: none;\n\t}\n\t&__breadcrumbs-current-page{\n\t\tdisplay: inline-block;\n\t\tpadding: 0 13px;\n\t\tcolor: #fff;\n\t\tfont: 400 16px / 1 map-deep-get($base, 'base-font-sans-serif');\n\t}\n}\n\n\n\n\n.baner {\n\tpadding: 0 10px;\n\tposition: relative;\n\theight: 320px;\n\tbackground-position: 50% 50%;\n\tbackground-size: cover;\n\t@include media('>=desktop') {\n\t\theight: 670px;\n\t}\n\t&__title {\n\t\t@include media('>=desktop') {\n\t\t\tmargin: 0 0 26px;\n\t\t\tpadding: 0 0 8px;\n\t\t}\n\t\t&:before {\n\t\t\tbackground: #00e0d0;\n\t\t\theight: 1px;\n\t\t}\n\t}\n\t&__heading {\n\t\tfont: bold #{map-deep-get($headings, 'sizes', 'h3-font-size')} #{map-deep-get($headings, 'fonts', 'headings-font-family')};\n\t\tmargin: 0 0 0.5em;\n\t\tcolor: map-deep-get($headings, 'fonts', 'headings-color');\n\t\tletter-spacing: 1px;\n\t\t@include media('>=tablet') {\n\t\t\tfont-size: 22px;\n\t\t\tline-height: 24px;\n\t\t}\n\t\t@include media('>=desktop') {\n\t\t\tfont-size: 32px;\n\t\t\tline-height: 34px;\n\t\t}\n\t}\n\t&__btn {\n\t\tdisplay: inline-block;\n\t\tvertical-align: middle;\n\t\tbox-sizing: border-box;\n\t}\n}","/* Portfolio style */\r\n.portfolio{\r\n    margin-bottom: 17px;\r\n    &__posts-item{\r\n        padding: 0 0 30px;\r\n        border-radius: 4px;\r\n        overflow: hidden;\r\n        img{\r\n            width: 100%;\r\n            display: block;\r\n            height:auto;\r\n        }\r\n    }\r\n    &__load-more{\r\n        text-align: center;\r\n    }\r\n    .grid-sizer,\r\n    .grid-item {\r\n        width: 30%;\r\n        @include media('<=tablet') {\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .gutter-sizer {\r\n      width: 5%;\r\n    }\r\n\r\n    &__filter{\r\n        border-radius: 4px;\r\n        border: 1px solid #bdc3c7;\r\n        max-width: 500px;\r\n        width: 100%;\r\n        margin: 0 auto 30px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        overflow: hidden;\r\n        @include media('<=tablet') {\r\n            flex-direction: column;\r\n            text-align: center;\r\n        }\r\n    }\r\n    &__filter-link{\r\n        border-right: 1px solid #bdc3c7;\r\n        padding: 8px 30px;\r\n        text-decoration: none;\r\n        font: 400 14px/1 map-deep-get($base, 'base-font-sans-serif');\r\n        color: map-get($link-color, 'link-color');\r\n        margin: -1px;\r\n        @include media('<=tablet') {\r\n            border-bottom: 1px solid #bdc3c7;\r\n        }\r\n        &:last-child{\r\n            border:0;\r\n        }\r\n        &:hover{\r\n            background: #41bedd;\r\n            color: #fff;\r\n        }\r\n    }\r\n    &__filter-link-active{\r\n        background: #41bedd;\r\n        color: #fff;\r\n    }\r\n}\r\n\r\n","/* common style */\n\n.page {\n\t@include font-smoothing(on);\n\tcolor: map-get($base, 'base-text-color');\n\tbackground: map-get($base, 'base-background-color');\n\tfont: 300 #{map-get($base, 'base-font-size')}/#{map-get($base, 'base-line-height')} #{map-get($base, 'base-font-sans-serif')};\n\tmin-width: map-get($base, base-min-width);\n\t@include media('>=tablet') {\n\t\tfont-size: 14px;\n\t\tline-height: 21px;\n\t}\n}\n\n// hide tel links on desktop\n@media only screen and (min-width:1025px) {\n\t.footer__tel[href^=tel] {\n\t\tcursor:default;\n\t\tpointer-events:none;\n\t}\n}\n\n.page__wrapper {\n\twidth: 100%;\n\toverflow: hidden;\n\tposition: relative;\n}\n\n.container {\n\t@extend %clearfix;\n\tmax-width: 1200px;\n\tpadding: 15px 15px;\n\tmargin: 0 auto;\n\tposition: relative;\n\t@include media('>=tablet') {\n\t\tpadding: 40px 15px;\n\t}\n\t@include media('>=desktop') {\n\t\tpadding: 70px 15px;\n\t}\n}","@font-face {\n  font-family: 'icomoon';\n  src: url('../fonts/icomoon.woff?a35viu') format('woff');\n  font-weight: normal;\n  font-style: normal;\n}\n\n[class^=\"icon-\"], [class*=\" icon-\"] {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: 'icomoon' !important;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-play:before {\n  content: \"\\e901\";\n}\n.icon-pause:before {\n  content: \"\\e900\";\n}\n.icon-arrow-right:before {\n  content: \"\\f10a\";\n}\n.icon-google:before {\n  content: \"\\f104\";\n}\n.icon-twitter:before {\n  content: \"\\f106\";\n}\n.icon-quotes:before {\n  content: \"\\f100\";\n}\n.icon-youtube:before {\n  content: \"\\f103\";\n}\n.icon-location:before {\n  content: \"\\f109\";\n}\n.icon-arrow-left:before {\n  content: \"\\f10b\";\n}\n.icon-plain:before {\n  content: \"\\f101\";\n}\n.icon-tel:before {\n  content: \"\\f108\";\n}\n.icon-facebook:before {\n  content: \"\\f107\";\n}\n.icon-instagram:before {\n  content: \"\\f105\";\n}\n.icon-basket:before {\n  content: \"\\f102\";\n}\n\n/* FONT PATH\n * -------------------------- */\n@font-face {\n  font-family: 'FontAwesome';\n  src:  url('../fonts/fontawesome-webfont.woff?v=4.7.0') format('woff');\n  font-weight: normal;\n  font-style: normal;\n}\n.fa {\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: inherit;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.fa-search:before {\n  content: \"\\f002\";\n}\n\n.fa-vimeo:before {\n  content: \"\\f27d\";\n}\n\n.fa-pinterest-p:before {\n  content: \"\\f231\";\n}\n\n.fa-flickr:before {\n  content: \"\\f16e\";\n}\n\n.fa-youtube-play:before {\n  content: \"\\f16a\";\n}\n\n.fa-linkedin-square:before {\n  content: \"\\f08c\";\n}\n\n.fa-skype:before {\n  content: \"\\f17e\";\n}\n\n.fa-envelope:before {\n  content: \"\\f0e0\";\n}\n\n.fa-phone:before {\n  content: \"\\f095\";\n}\n\n.fa-map-marker:before {\n  content: \"\\f041\";\n}\n\n.fa-angle-up:before {\n  content: \"\\f106\";\n}","/* button style */\n\n.btn {\n\t@include animate (color background);\n\tfont: #{map-get($button, 'btn-font-size')}/#{map-get($button, 'btn-line-height')} #{map-get($base, 'btn-font-sans-serif')};\n\tcolor: map-get($button, 'btn-color');\n\tborder: 1px solid map-get($button, 'btn-color-border');\n\tmin-width: map-get($button, 'btn-width');\n\tborder-radius: map-get($button, 'btn-radius');\n\tbackground: transparent;\n\tpadding: 10px 5px;\n\ttext-align: center;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tvertical-align: middle;\n\tbox-sizing: border-box;\n\tcursor: pointer;\n\t@include media('>=tablet') {\n\t\tfont-size: 16px;\n\t\tline-height: 16px;\n\t\tpadding: 10px 14px 10px;\n\t\tmin-width: 125px;\n\t}\n\t&:hover {\n\t\tcolor: #fff;\n\t\tbackground: map-get($button, 'btn-color-border-hover');\n        border: 1px solid map-get($button, 'btn-color-border-hover')\n\t}\n\t&:focus {\n\t\toutline: none;\n\t}\n}","/* title style */\n\n.title {\n\ttext-align: center;\n\tposition: relative;\n\tmargin: 0 0 12px;\n\tpadding: 0 0 5px;\n\t&:before {\n\t\tcontent:'';\n\t\tposition:absolute;\n\t\tleft:50%;\n\t\tbottom:0;\n\t\twidth: 50px;\n\t\theight: 2px;\n\t\tbackground: #c6c4c9;\n\t\ttransform: translateX(-50%);\n\t}\n}"]}